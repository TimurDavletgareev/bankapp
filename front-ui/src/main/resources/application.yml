server:
  port: 8080

spring:
  application:
    name: front

  security:
    oauth2:
      client:
        provider:
          keycloak:
            issuer-uri: ${KEYCLOAK_ISSUER_URI}
        registration:
          bankapp-front:
            provider: keycloak
            authorizationGrantType: client_credentials
            client-id: bankapp-front
            client-secret: ${KEYCLOAK_CLIENT_SECRET}
            scope: profile
            clientAuthenticationMethod: client_secret_post

  kafka:
    producer:
      bootstrap-servers: ${KAFKA_SERVER} #localhost:9092
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
    consumer:
      bootstrap-servers: ${KAFKA_SERVER} #localhost:9092
      group-id: bankapp-front-consumer
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      properties.spring.json.trusted.packages: ru.yandex.practicum.dto

gateway: ${GATEWAY_URL}

resource:
  alias:
    accounts: ${ACCOUNTS_ALIAS}
    transfer: ${TRANSFER_ALIAS}
    cash: ${CASH_ALIAS}

topic:
  notification: notification
  rates: rates

logging.level.org.apache.kafka.clients.NetworkClient: ERROR

# Spring Boot Actuator endpoints
management:
  endpoints:
    web:
      exposure:
        include: health,info,prometheus
  endpoint:
    health:
      probes:
        enabled: true